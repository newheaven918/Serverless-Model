{
  "Resources": {
    "MyApi": {
      "Properties": {
        "Body": {
          "definitions": {
            "user": {
              "properties": {
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "info": {
            "title": "Example",
            "version": "1"
          },
          "paths": {
            "/test": {
              "get": {
                "parameters": [
                  {
                    "in": "body",
                    "name": "user",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/user"
                    }
                  },
                  {
                    "in": "query",
                    "name": "type",
                    "required": true,
                    "type": "string"
                  }
                ],
                "responses": {},
                "security": [
                  {
                    "MyAuthorizer": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "cacheKeyParameters": [
                    "method.request.querystring.type"
                  ],
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }
              }
            }
          },
          "securityDefinitions": {
            "MyAuthorizer": {
              "in": "header",
              "name": "Authorization",
              "type": "apiKey",
              "x-amazon-apigateway-authorizer": {
                "providerARNs": [
                  {
                    "Fn::GetAtt": [
                      "MyCognitoUserPool",
                      "Arn"
                    ]
                  }
                ],
                "type": "cognito_user_pools"
              },
              "x-amazon-apigateway-authtype": "cognito_user_pools"
            }
          },
          "swagger": "2.0"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        }
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "MyApiDeploymentad22a9e0cd": {
      "Properties": {
        "Description": "RestApi deployment id: ad22a9e0cdf0c1ce5e0755c6e4cb041cca9fdc35",
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "Stage"
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "MyApiProdStage": {
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiDeploymentad22a9e0cd"
        },
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "Prod"
      },
      "Type": "AWS::ApiGateway::Stage"
    },
    "MyCognitoUserPool": {
      "Properties": {
        "UserPoolName": "MyCognitoUserPoolRandomName"
      },
      "Type": "AWS::Cognito::UserPool"
    },
    "MyFunction": {
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event, context, callback) => {\n  return {\n    statusCode: 200,\n    body: 'Success'\n  }\n}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyFunctionMyEventV1PermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/test",
            {
              "__ApiId__": {
                "Ref": "MyApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "MyFunctionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  }
}
