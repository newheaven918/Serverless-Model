{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Outputs": {
    "WebEndpoint": {
      "Description": "API Gateway endpoint URL",
      "Value": {
        "Fn::Sub": "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/hello"
      }
    }
  },
  "Resources": {
    "ApiGatewayLambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "AllowInvokeLambdaFunctions"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyApi": {
      "Properties": {
        "Body": {
          "components": {
            "securitySchemes": {
              "api_key": {
                "in": "header",
                "name": "x-api-key",
                "type": "apiKey"
              }
            }
          },
          "openapi": "3.0.1",
          "paths": {
            "/hello": {
              "get": {
                "security": [
                  {
                    "api_key": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "credentials": {
                    "Fn::Sub": "${ApiGatewayLambdaRole.Arn}"
                  },
                  "httpMethod": "POST",
                  "passthroughBehavior": "when_no_match",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }
              },
              "options": {
                "responses": {
                  "200": {
                    "description": "Default response for CORS method",
                    "headers": {
                      "Access-Control-Allow-Methods": {
                        "schema": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      },
                      "Access-Control-Allow-Origin": {
                        "schema": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "summary": "CORS support",
                "x-amazon-apigateway-integration": {
                  "requestTemplates": {
                    "application/json": "{\n  \"statusCode\" : 200\n}\n"
                  },
                  "responses": {
                    "default": {
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                        "method.response.header.Access-Control-Allow-Origin": "'*'"
                      },
                      "responseTemplates": {
                        "application/json": "{}\n"
                      },
                      "statusCode": "200"
                    }
                  },
                  "type": "mock"
                }
              }
            }
          }
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        }
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "MyApiDeploymentdb7bc48ce9": {
      "Properties": {
        "Description": "RestApi deployment id: db7bc48ce9273479c81f6c8c0b91862e71dbbef8",
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "Stage"
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "MyApidevStage": {
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiDeploymentdb7bc48ce9"
        },
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "dev"
      },
      "Type": "AWS::ApiGateway::Stage"
    },
    "MyFunction": {
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async function (event) {\n  return {\n    statusCode: 200,\n    body: JSON.stringify({ message: \"Hello, SAM!\" }),\n  }\n}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyFunctionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  }
}
